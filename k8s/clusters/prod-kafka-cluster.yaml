apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: prod-kafka-cluster
  namespace: production
spec:
  kafka:
    version: 3.0.0
    replicas: 3
    # resources:
    #   requests:
    #     memory: 2Gi
    #     cpu: "100m"
    #   limits:
    #     memory: 4Gi
    #     cpu: "2000m"
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
      - name: external
        port: 9094
        type: nodeport
        tls: false
        configuration:
          bootstrap:
            nodePort: 30100
          brokers:
            - broker: 0
              nodePort: 30101
              advertisedHost: XX.XX.XX.XX
            - broker: 1
              nodePort: 30102
              advertisedHost: XX.XX.XX.XX
            - broker: 2
              nodePort: 30103
              advertisedHost: XX.XX.XX.XX
    config:
      auto.create.topics.enable: "false"
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      log.message.format.version: "3.0"
      default.replication.factor: 1
      min.insync.replicas: 1
      inter.broker.protocol.version: "3.0"

    storage:
      type: ephemeral
    # metricsConfig:
    #   type: jmxPrometheusExporter
    #   valueFrom:
    #     configMapKeyRef:
    #       name: prod-kafka-cluster-metrics
    #       key: prod-kafka-cluster-metrics-config.yml
  zookeeper:
    replicas: 3
    # resources:
    #   requests:
    #     memory: 1Gi
    #     cpu: "200m"
    #   limits:
    #     memory: 2Gi
    #     cpu: "1500m"
    storage:
      type: ephemeral
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    # metricsConfig:
    #   type: jmxPrometheusExporter
    #   valueFrom:
    #     configMapKeyRef:
    #       name: prod-kafka-cluster-metrics
    #       key: prod-kafka-cluster-zookeeper-metrics-config.yml
  entityOperator:
    topicOperator: {}
    userOperator: {}
  # kafkaExporter:
  #   topicRegex: ".*"
  #   groupRegex: ".*"
