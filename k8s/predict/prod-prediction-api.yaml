###########################################################
# Start deployment of prediction api
###########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airqo-prediction-api
  namespace: production
spec:
  selector:
    matchLabels:
      app: prediction-api
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: prediction-api
    spec:
      containers:
        - name: prediction-api
          image: us.gcr.io/airqo-250220/airqo-prediction-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
              name: prediction-api
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 5000
          #   initialDelaySecond: 5
          #   periodSeconds: 3
          #   successThreshold: 1
          # env:
          #   - name: GET_HOSTS_FROM
          #     value: dns
          envFrom:
            - configMapRef:
                name: env-predict-production
          volumeMounts:
          - name: config-volume
            mountPath: /etc/config
      volumes:
        - name: config-volume
          configMap:
            name: env-predict-production-files

---
kind: Service
apiVersion: v1
metadata:
  name: airqo-prediction-api-svc
  namespace: production
spec:
  selector:
    app: prediction-api
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30009
  type: NodePort
