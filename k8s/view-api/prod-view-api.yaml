###########################################################
# Start deployment of view api - production
###########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airqo-views-api
  namespace: production
spec:
  selector:
    matchLabels:
      app: views-api
  replicas: 2
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: views-api
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: views-api
          image: us.gcr.io/airqo-250220/airqo-views-api:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: 256Mi
              cpu: "200m"
            limits:
              memory: 700Mi
              cpu: "1000m"
          ports:
            - containerPort: 8080
              name: views-api
          env:
            - name: JAVA_OPTIONS
              value: -Dspring.profiles.active=production
          envFrom:
            - configMapRef:
                name: prod-view-api-config
          readinessProbe:
            initialDelaySeconds: 60
            httpGet:
              port: 8080
              path: /actuator/health/readiness
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              port: 8080
              path: /actuator/health/liveness
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]

---
kind: Service
apiVersion: v1
metadata:
  name: airqo-views-api-svc
  namespace: production
spec:
  selector:
    app: views-api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30088
  type: NodePort
