apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nginx-ingress
data:
  proxy-body-size: "350m"
  client-max-body-size: "350m"
  proxy-protocol: "True"
  real-ip-header: "proxy_protocol"
  set-real-ip-from: "10.240.0.103"
  location-snippets: |
    auth_request /auth;
    error_page 500 = @internal_server_error;
    error_page 404 = @page_not_found;
    error_page 403 = @access_denied;
    error_page 401 = @unauthorized;
  server-snippets: |
    location @internal_server_error { return 500 '{\"success\":false, \"message\":\"Something went wrong!\", \"error\":\"Internal Server Error\"}'; }
    location @page_not_found { add_header Content-Type text/html; return 404 '<!DOCTYPE html><html><head><title>404 - Page Not Found</title><style>*{margin:0;padding:0;box-sizing:border-box}body{font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif;background:#f5f7fa;color:#2d3748;min-height:100vh;display:flex;flex-direction:column}.container{flex:1;display:flex;flex-direction:column;align-items:center;justify-content:center;padding:2rem;text-align:center}.error-code{font-size:8rem;font-weight:bold;color:#4299e1;margin-bottom:1rem;text-shadow:2px 2px 4px rgba(0,0,0,0.1)}.title{font-size:2rem;font-weight:600;margin-bottom:1rem;color:#2d3748}.message{font-size:1.2rem;color:#4a5568;margin-bottom:2rem;max-width:600px;line-height:1.6}.home-button{background-color:#4299e1;color:white;padding:0.75rem 1.5rem;border-radius:0.375rem;text-decoration:none;font-weight:500;transition:background-color 0.2s;box-shadow:0 2px 4px rgba(0,0,0,0.1)}.home-button:hover{background-color:#3182ce}footer{text-align:center;padding:1.5rem;background-color:white;color:#718096;box-shadow:0 -2px 4px rgba(0,0,0,0.05)}.animation{margin-bottom:2rem;font-size:4rem;animation:bounce 2s infinite}@keyframes bounce{0%,100%{transform:translateY(0)}50%{transform:translateY(-20px)}}</style></head><body><div class="container"><div class="animation">ðŸ¤”</div><div class="error-code">404</div><h1 class="title">Page Not Found</h1><p class="message">Oops! The page you're looking for seems to have vanished into thin air. Don't worry, you can navigate back to our home page or try searching for what you need.</p><a href="/" class="home-button">Back to Home</a></div><footer>Â© 2024 AirQo. All rights reserved.</footer></body></html>'; }
    location @access_denied { return 403 '{\"success\":false, \"message\":\"Access denied :|\", \"error\":\"Insufficient Permissions\"}'; }
    location @unauthorized { return 401 '{\"success\":false, \"message\":\"Invalid authentication\", \"error\":\"Unauthorized.\"}'; }

    location /airqo-rest-api-documentation { return 302 /#/api/; }
    location /airqo-application-documentations { return 302 /#/mobile_app/privacy_policy; }
    location /airqo-terms-and-conditions/HxYx3ysdA6k0ng6YJkU3 { return 302 /#/platform/terms_and_conditions; }

    location = /auth {      
      if ($request_method = 'OPTIONS') { return 204; } 
      if ($request_uri ~ '/api/(v1|v2)/users') { return 200; }
      if ($request_uri ~ '/api/(v1|v2)/devices/grids/summary') { return 200; }
      if ($request_uri ~ '/api/(v1|v2)/devices/events/running') { return 200; }
      if ($request_uri ~ '/airflow/api/v') { return 200; }    
      if ($request_uri ~ '/grafana/api') { return 200; }    
      if ($request_uri !~ '/api/v') { return 200; } # None API requests 

      set $client_ip $remote_addr;
      set $host_name $host;

      set $method POST;
      set $verification_path verify?tenant=airqo;

      if ($request_uri ~* 'token=(?<token>[^&]+)') {
        set $method GET;
        set $verification_path tokens/$token/verify;
      }

      internal;
      resolver kube-dns.kube-system.svc.cluster.local valid=5s;
      proxy_method $method;
      proxy_pass http://airqo-stage-auth-api-svc.staging.svc.cluster.local:3000/api/v2/users/$verification_path;
      proxy_pass_request_body on;
      proxy_set_header Content-Length '';
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Original-Method $request_method;
      proxy_set_header X-Client-IP $client_ip;
      proxy_set_header X-Host-Name $host_name;
      proxy_set_header X-Client-Original-IP $proxy_add_x_forwarded_for;
    }"