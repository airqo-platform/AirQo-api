apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.env.deployment_name }}
  namespace: {{ .Values.appMode }}
  labels:
{{ include "airqo-device-registry-api.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.env.labels }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.env.labels }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:

      containers:
        - name: {{ .Values.env.labels }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.env.labels }}
              containerPort: {{ .Values.service.targetPort }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:
            - name: MONGO_GCE_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.secret }}
                  key: MONGO_GCE_URI
            - name: DB_NAME_PROD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.secret }}
                  key: PLATFORM_MONGO_PROD
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.secret }}
                  key: SECRET_KEY
            - name: SERVICE_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.secret }}
                  key: SERVICE_ACCOUNT
            - name: CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.secret }}
                  key: CREDENTIALS
            - name: REDIS_SERVER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.secret }}
                  key: REDIS_SERVER
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.secret }}
                  key: REDIS_PORT
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
