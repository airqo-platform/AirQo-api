# This workflow build and push a Docker container to Google Artifact Registry and deploy it on Cloud Run when a commit is pushed to the staging branch
#
# Overview:
# 1. Authenticate to Google Cloud
# 2. Authenticate Docker to Artifact Registry
# 3. Build a docker container
# 4. Publish it to Google Artifact Registry
# 5. Deploy it to Cloud Run
#
# For more support on how to run this workflow, please visit https://github.com/marketplace/actions/deploy-to-cloud-run

name: Deploy preview to Cloud Run

on:
  pull_request:
    branches:
      - staging

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  SERVICE: auth-service-pr-previews
  REGION: ${{ secrets.REGION }}

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_CREDENTIALS }}'

      # BEGIN - Docker auth and build

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.GCR_CONFIG }}

      - name: Build and Push Container
        run: |-
          docker build -t "gcr.io/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:${{ github.sha }}" ./
          docker push "gcr.io/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:${{ github.sha }}"

      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: auth-service-pr-previews
          region: ${{ secrets.REGION }}
          image: gcr.io/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:${{ github.sha }}

      # Display app uri
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
