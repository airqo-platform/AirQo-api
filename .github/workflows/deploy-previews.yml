name: Deploy preview to Cloud Run

on:
  pull_request:
    branches:
      - staging

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  SERVICE: auth-service-pr-previews
  REGION: ${{ secrets.REGION }}

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_CREDENTIALS }}'

      # BEGIN - Docker auth and build

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.GCP_SA_CREDENTIALS }}

      - name: Build and Push Container
        run: |
          cd src/auth-service/
          docker build --target=staging -t ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:${{ github.sha }} ./
          docker tag ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:${{ github.sha }} ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:latest
          docker push ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:latest
          
      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          metadata: .github/utils/cloudrun/auth-template-meta.yaml
            # apiVersion: serving.knative.dev/v1
            # kind: Service
            # metadata:
            #   name: auth-service-pr-previews
            #   labels:
            #     cloud.googleapis.com/location: ${{ env.REGION }}
            # spec:
            #   template:
            #     metadata:
            #       annotations:
            #         autoscaling.knative.dev/maxScale: '10'
            #     spec:
            #       timeoutSeconds: 60
            #       containerConcurrency: 10
            #       containers:
            #       - image: ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/pr-previews/auth-service-pr-previews:${{ github.sha }}
            #         ports:
            #         - containerPort: 3000
            #           name: http1
            #         resources:
            #           limits:
            #             cpu: 1000m
            #             memory: 256Mi
            #         volumeMounts:
            #         - mountPath: /etc/app-env
            #           name: app-env-variables
            #           readOnly: true
            #         - mountPath: /etc/config
            #           name: firebase-credentials
            #           readOnly: true
            #         command: ["/bin/sh","-c","cat /etc/app-env/.env >> /usr/src/app/.env; npm run stage-mac"]
            #       volumes:
            #       - name: app-env-variables
            #         secret:
            #           items:
            #           - key: latest
            #             path: .env
            #           secretName: sta-env-auth-service
            #       - name: firebase-credentials
            #         secret:
            #           items:
            #           - key: latest
            #             path: firebase-admin-sdk.json
            #           secretName: sta-key-auth-service-firebase-admin-sdk

      # Display app uri
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
